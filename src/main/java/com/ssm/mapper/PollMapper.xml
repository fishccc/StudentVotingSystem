<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ssm.mapper.PollMapper" >
  <resultMap id="BaseResultMap" type="com.ssm.po.Poll" >
    <result column="vote_id" property="voteId" jdbcType="INTEGER" />
    <result column="option1_num" property="option1Num" jdbcType="INTEGER" />
    <result column="option2_num" property="option2Num" jdbcType="INTEGER" />
    <result column="option3_num" property="option3Num" jdbcType="INTEGER" />
    <result column="option4_num" property="option4Num" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    vote_id, option1_num, option2_num, option3_num, option4_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ssm.po.PollExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from poll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ssm.po.PollExample" >
    delete from poll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.po.Poll" >
    insert into poll (vote_id, option1_num, option2_num, 
      option3_num, option4_num)
    values (#{voteId,jdbcType=INTEGER}, #{option1Num,jdbcType=INTEGER}, #{option2Num,jdbcType=INTEGER}, 
      #{option3Num,jdbcType=INTEGER}, #{option4Num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.po.Poll" >
    insert into poll
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="voteId != null" >
        vote_id,
      </if>
      <if test="option1Num != null" >
        option1_num,
      </if>
      <if test="option2Num != null" >
        option2_num,
      </if>
      <if test="option3Num != null" >
        option3_num,
      </if>
      <if test="option4Num != null" >
        option4_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="voteId != null" >
        #{voteId,jdbcType=INTEGER},
      </if>
      <if test="option1Num != null" >
        #{option1Num,jdbcType=INTEGER},
      </if>
      <if test="option2Num != null" >
        #{option2Num,jdbcType=INTEGER},
      </if>
      <if test="option3Num != null" >
        #{option3Num,jdbcType=INTEGER},
      </if>
      <if test="option4Num != null" >
        #{option4Num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.po.PollExample" resultType="java.lang.Integer" >
    select count(*) from poll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update poll
    <set >
      <if test="record.voteId != null" >
        vote_id = #{record.voteId,jdbcType=INTEGER},
      </if>
      <if test="record.option1Num != null" >
        option1_num = #{record.option1Num,jdbcType=INTEGER},
      </if>
      <if test="record.option2Num != null" >
        option2_num = #{record.option2Num,jdbcType=INTEGER},
      </if>
      <if test="record.option3Num != null" >
        option3_num = #{record.option3Num,jdbcType=INTEGER},
      </if>
      <if test="record.option4Num != null" >
        option4_num = #{record.option4Num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update poll
    set vote_id = #{record.voteId,jdbcType=INTEGER},
      option1_num = #{record.option1Num,jdbcType=INTEGER},
      option2_num = #{record.option2Num,jdbcType=INTEGER},
      option3_num = #{record.option3Num,jdbcType=INTEGER},
      option4_num = #{record.option4Num,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>